# tmiDB Core Services
# 이 파일 하나로 tmiDB의 모든 핵심 구성요소를 로컬 환경에서 실행할 수 있습니다.
# .env 파일에 정의된 환경변수를 자동으로 참조합니다.

services:
  # 1. Database Engine (PostgreSQL + TimescaleDB)
  db:
    image: timescale/timescaledb:latest-pg15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: >
      postgres -c timescaledb.telemetry_level=off
               -c timescaledb.license='apache'
    volumes:
      - db_data:/var/lib/postgresql/data
      # 컨테이너 시작 시 ./initdb 폴더의 .sql 파일을 자동으로 실행합니다.
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "${TMIDB_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. REST API Server (PostgREST)
  postgrest:
    image: postgrest/postgrest:v11.2.2
    restart: always
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_DB_SCHEMAS: public
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:${TMIDB_PGRST_PORT}
    ports:
      - "${TMIDB_PGRST_PORT}:3000"
    depends_on:
      db:
        condition: service_healthy

  # 3. Real-time Streaming Server (Supabase Realtime)
  realtime:
    image: supabase/realtime:v2.30.1
    restart: always
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_SCHEMAS: public
      JWT_SECRET: ${JWT_SECRET}
      RLIMIT_NOFILE: 1048576
    command: >
      sh -c "ulimit -n 1048576 && /usr/bin/tini -s -g -- /app/bin/server"
    ports:
      - "${TMIDB_RT_PORT}:4000"
    depends_on:
      db:
        condition: service_healthy

  # 4. S3 Object Storage (SeaweedFS)
  seaweed:
    image: chrislusf/seaweedfs:3.67
    restart: always
    command: "server -s3 -dir=/data -volume.max=0"
    volumes:
      - weed_data:/data
    ports:
      - "${TMIDB_S3_PORT}:8333" # S3 Gateway Port
      - "9333:9333" # Filer Port

  # 5. Message Bus (NATS JetStream)
  nats:
    image: nats:2.10-alpine
    restart: always
    command: "--jetstream --store_dir=/data"
    volumes:
      - nats_data:/data
    ports:
      - "${TMIDB_NATS_PORT}:4222"

  # 6. tmiDB Proxy Server (Go)
  proxy:
    build:
      context: ./tmidb-proxy
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: 8080
    ports:
      - "${TMIDB_PROXY_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy

# 데이터 영속성을 위한 Docker 볼륨 정의
volumes:
  db_data:
  weed_data:
  nats_data:
